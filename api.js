import got from 'got';

const getNice = (ms) => {
    return new Date(ms).toISOString().slice(11, 19);
}

export const getAllSongs = async (playlistId, authHeader) => {
    const songs = [];
    let offset = 0;

    while (true) {
        const url = `https://api.spotify.com/v1/playlists/${playlistId}/tracks?offset=${offset}&limit=100&market=from_token&locale=en&additional_types=track%2Cepisode`;
        const r = await got.get(url, {
            headers: {
                'Authorization': authHeader
            }
        });

        const rsp = JSON.parse(r.body);
        const summ = rsp.items.map(item => {
            return {
                uri: item.track.uri,
                name: `${item.track.artists[0].name} - ${item.track.name}`,
                ms: item.track.duration_ms
            }
        })

        songs.push(...summ);
        if (rsp.items.length === 0){
            // console.log('end');
            return songs;
        }

        offset += 100;
    }
}

export const makePlaylist = (userId, playlistName, authHeader) => {
    const url = `https://api.spotify.com/v1/users/${userId}/playlists`;

    return got.post(url, {
        headers: {
            'Authorization': authHeader
        },
        json: {
            name: playlistName,
            description: 'Generated by spot-shuffle'
        }
    });
}

export const deleteItems = async (uris, playlistId, authHeader) => {
    let urisToAdd = uris.splice(0, 100);

    while (true){
        await got.delete(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {
            headers: {
            'Authorization': authHeader
            },
            json: {
                uris: urisToAdd,
            }
        });

        if (uris.length === 0){
            // console.log('done');
            return;
        }

        // console.log(`${uris.length} more to go`);
        urisToAdd = uris.splice(0, 100);
    }
}

export const addItems = async (uris, playlistId, authHeader) => {
    let urisToAdd = uris.splice(0, 100);

    while (true){
        await got.post(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {
            headers: {
            'Authorization': authHeader
            },
            json: {
                uris: urisToAdd,
            }
        });

        if (uris.length === 0){
            // console.log('done');
            return;
        }

        // console.log(`${uris.length} more to go`);
        urisToAdd = uris.splice(0, 100);
    }
}